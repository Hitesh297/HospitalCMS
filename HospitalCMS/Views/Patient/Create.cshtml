@model HospitalCMS.Models.Patient
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Patient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @* @Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">FirstName:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                <input class="form-control" name="FirstName">

            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">LastName:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                <input class="form-control" name="LastName">

            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">DOB:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })*@
                <input class="form-control" type="date" name="DOB" />
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Gender:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                <select class="form-control" name="Gender">
                    <option value="x">Please Select</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Mobile:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })*@
                <input class="form-control" name="Mobile">

            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Email:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                @if (User.IsInRole("Patient"))
                {
                    <input class="form-control" name="Email" value="@User.Identity.GetUserName()" readonly>
                }
                else
                {
                <input class="form-control" name="Email">
                }

            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">MaritalStatus:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.MaritalStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })*@
                <select class="form-control" name="MaritalStatus">
                    <option value="x">Please Select</option>
                    <option value="Married">Married</option>
                    <option value="UnMarried">UnMarried</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Address1:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                <input class="form-control" name="Address1">

            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Address2:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                <input class="form-control" name="Address2">

            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">City:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                <input class="form-control" name="City">

            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Country:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                <input class="form-control" name="Country">

            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model., htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">PostalCode:</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })*@
                <input class="form-control" name="PostalCode">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
